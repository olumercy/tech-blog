name: Build Hugo blog

on:
  push:
    branches:
      - main  # Set a branch to deploy

permissions:
   id-token: write # This is required for requesting the JWT
   contents: read  # This is required for actions/checkout

concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      AWS_REGION: 'eu-west-1'

    steps:
       - name: Checkout repository
         uses: actions/checkout@v3

       - name: Configure AWS credentials
         uses: aws-actions/configure-aws-credentials@v2
         with: 
            role-to-assume: ${{secrets.IAM_ROLE}}
            aws-region: ${{secrets.AWS_REGION}}

       - name: Setup Terraform
         uses: hashicorp/setup-terraform@v3
         with:
           terraform_version: "1.9.7"

        #Credentials for HCP Terraform (app.terraform.io) 
       - uses: hashicorp/setup-terraform@v3 
         with: 
           cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


       - name: Initialize Terraform
         id: init
         run: cd terraform && terraform init

       - name: Plan Terraform deployment
         id: plan
         run: cd terraform && terraform plan -no-color

       - name: Apply Terraform changes
         id: apply
         run: cd terraform && terraform apply -auto-approve

       - name: Capture Terraform outputs
         id: terraform_outputs
         run: |
           echo "S3_BUCKET=$(terraform output -raw s3_bucket_name)" >> $GITHUB_ENV
           echo "CLOUDFRONT_ID=$(terraform output -raw cloudfront_id)" >> $GITHUB_ENV
           echo "CLOUDFRONT_DOMAIN=$(terraform output -raw cloudfront_domain)" >> $GITHUB_ENV

  build:
    needs: terraform
    runs-on: ubuntu-latest
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'
        extended: true

    - name: Build the blog
      run: hugo --minify

    - name: Upload generated site as artifact
      uses: actions/upload-artifact@v4
      with:
        name: tech-blog
        path: public/**

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Deploy to S3 Bucket
      run: aws s3 sync public/ s3://$S3_BUCKET --delete

    - name: Invalidate CloudFront cache
      run: aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"
